---

- hosts: localhost
  tasks:
    - name: create directory for ssh-keys if doesn't exist
      file: path=files/keys state=directory
  tags: prepare


- hosts: "{{ cluster_name }}_master:{{ cluster_name }}_slaves"
  gather_facts: no
  any_errors_fatal: true
  tasks:
    - name: Check if instances really got floating IPs
      when: hostvars[inventory_hostname].openstack.public_v4 == ''
      fail: msg="One of the instances didn't get floating IP address"
  tags: prepare



- hosts: "{{ cluster_name }}_master:{{ cluster_name }}_slaves"
  gather_facts: no
  any_errors_fatal: true
  tasks:
    - name: Wait for ssh-server to start
      local_action:
        module: wait_for
          host="{{ hostvars[inventory_hostname].openstack.public_v4 }}"
          port=22
          search_regex=OpenSSH
          delay=3
          timeout=300
#    - debug: msg="Checking ssh for {{ hostvars[inventory_hostname].openstack.public_v4 }}"
  tags: prepare

- hosts: "{{ cluster_name }}_master:{{ cluster_name }}_slaves"
  gather_facts: no
  any_errors_fatal: true
  tasks:
    - name: install Python 2 if missing
      raw: test -e /usr/bin/python || (sudo apt -y update && sudo apt install -y python-minimal)
      delay: 10
  tags: prepare

- hosts: "{{ cluster_name }}_master"
  tasks:
    - name: generating key for hadoop user
      user: name={{ hadoop_user }} generate_ssh_key=yes
    - name: get the public key
      fetch: src="/home/{{ hadoop_user }}/.ssh/id_rsa.pub" dest="files/keys/{{ cluster_name }}.pub" flat=yes
    - name: get the private key
      fetch: src="/home/{{ hadoop_user }}/.ssh/id_rsa" dest="files/keys/{{ cluster_name }}" flat=yes

  tags: prepare

- hosts: "{{ cluster_name }}_master:{{ cluster_name }}_slaves"
  become: True
  become_user: root
  vars:
    hadoop_user: ubuntu
  tasks:
    - name: deploy authorized keys
      authorized_key: user={{ hadoop_user }} key={{ lookup('file', 'files/keys/{{ cluster_name }}.pub') }}

    - name: deploy ssh-keys
      copy: src="files/keys/{{ cluster_name }}" dest="/home/{{ hadoop_user }}/.ssh/{{ cluster_name }}"

    - name: distribute ssh config
      template: src=templates/config.j2 dest="/home/{{ hadoop_user }}/.ssh/config"

    - name: modify /etc/hosts
      lineinfile: dest=/etc/hosts state=present line="{{ hostvars[item].openstack.public_v4}} {{ hostvars[item].openstack.name }}"
      with_items: "{{ play_hosts }}"
    #  template: src=templates/hosts.j2 dest=/etc/hosts
  tags: prepare

- name: "Install requisite software on nodes"
  hosts: "{{ cluster_name }}_master:{{ cluster_name }}_slaves"
  become: yes
  become_user: ubuntu
  tasks:
  - name: Install software
    script: "{{ playbook_dir }}/files/setup-nodes.sh"

- name: "Install Madlib and GPDB"
  hosts: "{{ cluster_name }}_master"
  become: yes
  become_user: ubuntu
  tasks:
    - name: Copy the relevant script
      copy: 
        src: "{{ playbook_dir }}/files/install-gpdb.sh"
        dest: "/home/ubuntu/install-gpdb.sh"
        owner: ubuntu
        group: ubuntu
        mode: 777
    - name: Run the script
      command: source /home/ubuntu/install-gpdb.sh